{
  "A": {
    "API": "acronimo di Application Programming Interface, si intende un insieme di procedure e funzioni offerte ai programmatori, ottenendo un'astrazione ad alto livello per facilitare lo sviluppo. Le API espongono blocchi di codice delle librerie di cui fanno parte, permettendo il riuso del codice.",
    "API REST": "API che rispetta i principi dell'architettura software REST (acronimo di Representational State Transfer). REST è un sistema di trasmissione dei dati che utilizza HTTP e fa un grande uso delle sue funzioni, ricorrendo ai comandi GET, POST, PUT, PATCH, DELETE e OPTIONS, riuscendo così ad identificare risorse precise nel Web.",
    "Account": "il complesso dei dati identificativi di un utente, che gli consentono l'accesso all'applicazione mobile oppure alla web application.",
    "Amministratore": "utente con privilegi avanzati su tutto il sistema di Stalker, esegue operazioni amministrative e gestisce le richieste che provengono da utenti con permessi limitati.",
    "Analista": "ruolo assunto da uno o più membri del team di progetto, è responsabile delle attività di analisi e redige lo Studio di Fattibilità e l'Analisi dei Requisiti.",
    "Analisti": null,
    "Angular": "framework open source, sviluppato principalmente da Google, per lo sviluppo di applicazioni web nel linguaggio TypeScript.",
    "Applicazione mobile": "applicazione software dedicata ai dispositivi di tipo mobile, quali smartphone o tablet.",
    "Architettura": "processo di definizione di una soluzione strutturata che soddisfa tutti i requisiti tecnici e operativi, ottimizzando al contempo attributi di qualità comuni come prestazioni, sicurezza e gestibilità. Implica una serie di decisioni basate su una vasta gamma di fattori e ciascuna di queste decisioni può avere un impatto notevole sulla qualità, sulle prestazioni, sulla manutenibilità e sul successo complessivo dell'applicazione.",
    "Aree d'interesse": "\\placeholder{scrivere o ignorare questa definizione}",
    "Attività": "parte di un processo che indica l'insieme di compiti da realizzare per realizzare il prodotto finale e soddisfarne i requisiti.",
    "account": null,
    "amministratore": null,
    "analisti": null,
    "applicazione mobile": null,
    "architettura": null,
    "aree d'interesse": null,
    "attività": null
  },
  "B": {
    "Back-end": "parte di un software con il quale l'utente interagisce indirettamente, ma che risulta essenziale per il funzionamento del sistema.",
    "Baseline": "istanza di configurazione che consolida lo stato di avanzamento del prodotto ad un dato istante, ovvero l'avanzamento incrementale che è parte del prodotto finale.",
    "Bootstrap": "raccolta di strumenti liberi per la creazione di siti e applicazioni per il Web, contiene modelli di progettazione basati su HTML e CSS ed estensioni opzionali di JavaScript.",
    "Bottom-up": "approccio di analisi e progettazione volto prima a individuare tutte le unità del sistema al dettaglio, poi a connetterle tra loro in modo da formare componenti più grandi, a loro volta interconnesse fino a realizzare un sistema completo.",
    "back-end": null,
    "baseline": null,
    "bottom-up": null
  },
  "C": {
    "Capitolato": "documento tecnico redatto dall'azienda committente, contenente tutte le specifiche tecniche del prodotto software che devono essere rispettate ed eseguite dall'azienda fornitrice per effetto di un contratto d'appalto.",
    "Caso d'uso": "insieme di scenari, ovvero sequenze di azioni, che hanno in comune uno scopo finale per un attore, ovvero un utente. Descrivono l'insieme di funzionalità del sistema percepite dall'utente.",
    "ChkTex": "linter per LaTeX, utilizzato per trovare errori sintattici in documenti scritti in LaTeX.",
    "Chktex": null,
    "Client": "componente che accede ai servizi o alle risorse di un'altra componente detta server.",
    "Code editor": "programma di scrittura di testo, progettato specificamente per la modifica del codice sorgente nei vari linguaggi di programmazione.",
    "Command Line Interface": "in italiano interfaccia a linea di comando, è un tipo di interfaccia utente caratterizzata da un'interazione testuale tra l'utente e l'elaboratore.",
    "Commit": "comando di Git utilizzato per salvare i propri cambiamenti nella repository locale del progetto.",
    "Commitizen": "strumento da riga di comando che consente di formattare i messaggi di commit con una serie di prompt utilizzati per generare un messaggio di commit.",
    "Commitizen adapter": "meccanismo attraverso cui la utility Commitizen permette di applicare specifiche diverse, caso per caso, ai messaggi di commit.",
    "Componente connessa": "nella teoria dei grafi, sottografo in cui qualsiasi coppia di vertici è connessa da cammini e il sottografo non è connesso a nessun vertice addizionale del supergrafo.",
    "Componenti connesse": null,
    "Copertura": "nelle telecomunicazioni, la zona geografica servita da una rete di telefonia cellulare o stazione radio.",
    "Curl": "acronimo di Client URL, è un software che fornisce una libreria e uno strumento da riga di comando per il trasferimento di dati mediante vari protocolli di rete.",
    "capitolato": null,
    "casi d'uso": null,
    "client": null,
    "commitizen adapter": null,
    "componenti connesse": null,
    "copertura": null
  },
  "D": {
    "Dati": null,
    "Dato": "valore privo di significato, che lo assume se associato in determinati contesti significativi.",
    "Design pattern": "Soluzione progettuale generale a un problema ricorrente. È la descrizione di un modello da applicare per risolvere un problema, il quale può presentarsi in diverse situazioni durante la progettazione e lo sviluppo del software. Ogni design pattern ha il suo campo applicativo in base alle precondizioni del problema, coi suoi pregi e difetti.",
    "Dev ops": "abbreviazione di Development (sviluppo) e Operations (deployment), è una metodologia di sviluppo del software utilizzata in informatica che punta alla comunicazione, collaborazione ed integrazione tra sviluppatori e addetti alle operations. Questa pratica permette rilascio di software frequente.",
    "Docker": "tecnologia di containerizzazione che consente la creazione e l'utilizzo dei container Linux, per isolare i processi in modo da poterli eseguire in maniera indipendente.",
    "Documento": "entità fisica o digitale atta a registrare informazioni significative.",
    "dati": null,
    "documento": null
  },
  "E": {
    "EULA": "acronimo di End-User License Agreement, è il contratto tra il fornitore di un programma software e l'utente finale. Se l'utente accetta tale contratto, gli verrà assegnata la licenza d'uso del programma nei termini stabiliti dal contratto stesso.",
    "Economicità": "capacità del team di massimizzare l'efficienza delle risorse a sua disposizione al vincolo della copertura dei costi, ottenendo con efficacia il risultato atteso.",
    "economicità": null
  },
  "F": {
    "Fase": "segmento temporale delimitato da un inizio e una fine, nel quale avvengono delle transazioni coerenti tra stati.",
    "Fase di incremento": "fase nella quale la parte da integrare nel software da aggiungere viene verificata e, solo in caso di accettazione, questa viene integrata nel software, rispettando la logica del modello incrementale.",
    "Fasi": null,
    "Fasi di incremento": null,
    "Front-end": "parte di un software visibile all'utente e con cui egli può interagire tramite un interfaccia utente.",
    "fasi": null,
    "fasi di incremento": null,
    "front-end": null
  },
  "G": {
    "GDPR": "acronimo di General Data Protection Regulation, è un regolamento applicato a tutti gli stati membri dell'Unione Europea in merito alla alla protezione delle persone fisiche, con riguardo al trattamento e alla libera circolazione dei dati personali.",
    "GPS": "acronimo di Global Positioning System, è un sistema di posizionamento satellitare che permette in ogni istante di localizzare la latitudine e la longitudine di un oggetto, grazie all'utilizzo di satelliti che stazionano nell'orbita terrestre.",
    "GRPC": "sistema di chiamata (RPC) di procedura remota open source, genera collegamenti client e server multipiattaforma e supporta l'utilizzo dell'autenticazione basata su token e TLS.",
    "Geofencing": "tecnologia che crea un perimetro virtuale (chiamato geo-fence) attorno ad ogni dispositivo mobile. Consente alle applicazioni mobile di tracciare i movimenti degli utenti registrati allâ€™interno di una area geografica circolare, definita da due punti. Le tecnologie coinvolte per il geofencing sono GPS, Bluetooth e Wi-Fi.",
    "Gestore": "utente appartenente ad un'organizzazione abilitato a gestire i luoghi dell'organizzazione. Un singolo utente può essere gestore di più organizzazioni distinte.",
    "Git": "sistema di controllo versione distribuito, in inglese DVCS (acronimo di Distributed Version Control System), utilizzabile da interfaccia a riga di comando. Utile per gestire progetti che siano tracciabili sia in locale che in remoto.",
    "GitHub": "servizio di hosting per progetti software, è un implementazione del DVCS Git che offre un sistema di Issue Tracking System e dov'è possibile fare attività in branch diversi e visualizzare lo stato di ogni singola attività e a chi è stata assegnata.",
    "Google Calendar": "sistema di calendari concepito da Google, che offre la possibilità di creare più calendari, di condividerli e importarli da altri servizi online o nel computer.",
    "Google Hangouts": "web application di Google utilizzata da GruppOne per la messaggistica istantanea e videoconferenza.",
    "Gulpease": "indice di leggibilità di un testo tarato sulla lingua italiana, utilizza la lunghezza delle parole in lettere anziché in sillabe, semplificandone il calcolo automatico.",
    "gRPC": "open source RPC framework sviluppato inizialmente da Google che sta prendendo una fetta di mercato sempre più importante per quanto riguarda le comunicazioni in architetture di microservizi, mobile e siti web.",
    "geofencing": null,
    "gestore": null
  },
  "H": {
    "Hangouts": null
  },
  "I": {
    "IAAS": "acronimo di Infrastructure as a service, offerta di cloud computing in cui un venditore fornisce agli utenti l'accesso alle risorse di calcolo, ad esempio server, storage e connessione di rete. Le organizzazioni utilizzano le loro piattaforme e applicazioni all'interno dell'infrastruttura di un provider di servizi.",
    "Imola Informatica": "proponente del capitolato per il progetto Stalker."
  },
  "J": {
    "JSON": "acronimo di JavaScript Object Notation, è un formato adatto all'interscambio di dati fra applicazioni client/server.",
    "Java": "linguaggio di programmazione ad alto livello, orientato agli oggetti e a tipizzazione statica, progettato per essere il più possibile indipendente dalla piattaforma di esecuzione.",
    "Java 8": null,
    "JavaScript": "linguaggio di scripting orientato agli oggetti e agli eventi, comunemente utilizzato nella programmazione web lato client per gestire gli effetti dinamici interattivi.",
    "Javascript": "\\placeholder{scrivere o ignorare questa definizione}",
    "javascript": null
  },
  "K": {
    "Kubernetes": "piattaforma open source per automatizzare la distribuzione, la scalabilità e la gestione di applicazioni containerizzate."
  },
  "L": {
    "LDAP": "acronimo di Lightweight Directory Access Protocol, LDAP è un protocollo d'accesso a servizi di directory, basato sul modello client-server, che opera su TCP/IP o su altre connessioni orientate al servizio.",
    "Label": "etichetta che viene assegnata da un membro del team ad una issue oppure una pull request, che aiuta a catalogare e prioritizzare le attività da svolgere nel progetto.",
    "Link": "collegamento ad un'altra pagina.",
    "Linter": "programma che analizza staticamente il codice sorgente per segnalare errori, bug, costrutti non congrui e mancato adempimento ad uno stile.",
    "Luoghi": null,
    "Luogo": "spazio fisico indentificato da un insieme di coordinate geografiche. Ciascun luogo è riconducibile ad un'organizzazione.",
    "label": null,
    "linter": null,
    "luoghi": null,
    "luogo": null
  },
  "M": {
    "Material design": "design sviluppato e utilizzato in tutti i prodotti web e mobile da Google, è supportato nativamente a partire da Android 5.0.",
    "Milestone": "punto nel tempo fissato sulla baseline che indica il raggiungimento di determinati obiettivi stabiliti con importanza strategica.",
    "Modello a V": "modello di sviluppo del software che dimostra la relazione tra ogni fase del ciclo di vita dello sviluppo del software e la sua fase di testing.",
    "Modello a \\textit{V": null,
    "Modello client/server": "modello architetturale di sistemi distribuiti, organizzato come un insieme di servizi associati a uno o più server, e di client che accedono e utilizzano tali servizi.",
    "Modello incrementale": "modello di sviluppo del software atto a procedere per incrementi continui del sistema, con la caratteristica che tutto il software sviluppato prima di un incremento è valido. L'incremento deve essere di qualità per attenersi ai requisiti del prodotto finale.",
    "Modello server/client": "\\placeholder{scrivere o ignorare questa definizione}",
    "milestone": null,
    "modello client/server": null,
    "modello incrementale": null,
    "modello server/client": null
  },
  "N": {
    "Nativescript": "framework open source per lo sviluppo di applicazioni mobile su piattaforme iOS e Android. Le applicazioni mobile NativeScript vengono create utilizzando JavaScript o qualsiasi linguaggio che esegue la traslazione in JavaScript, come TypeScript.",
    "Node.js": null,
    "NodeJS": "ambiente di runtime JavaScript open source multipiattaforma orientato agli eventi per l'esecuzione di codice JavaScript.",
    "Notifica": "messaggio che viene spedito all'utente direttamente dal server, a causa del verificarsi di un evento indipendente dalle richieste dell'utente.",
    "notifica": null
  },
  "O": {
    "OpenAPI 3.0": "ultima versione dello standard open source utilizzato per la descrizione delle API. L’implementazione di questa funzione è basata sul kit di sviluppo software OpenAPI.NET.",
    "OpenStreetMap": "progetto collaborativo finalizzato a creare mappe del mondo a contenuto libero.",
    "Openshift": "PAAS prodotto da Red Hat ed è una piattaforma per applicazioni cloud che rende semplice lo sviluppo, il deploy e la scalabilità di applicazioni cloud.",
    "Organizzazione": "soggetto che ha interesse a tracciare le presenze delle persone all'interno dei propri luoghi, in maniera anonima o autenticata.",
    "Organizzazioni": null,
    "Owner": "utente proprietario di una o più organizzazioni, ha privilegi di gestione dell'organizzazione su cui opera e dei suoi gestori e visualizzatori. Un singolo utente può essere owner di più organizzazioni distinte.",
    "organizzazioni": null,
    "owner": null
  },
  "P": {
    "PAAS": "acronimo di Platform as a Service, è un ambiente di sviluppo e distribuzione completo nel cloud. Come IASS, include l'infrastruttura ma anche middleware, strumenti di sviluppo, sistemi di gestione dei database e molto altro.",
    "PGF": "linguaggio utilizzato per i diagrammi di Gantt che genera grafica vettoriale a partire da descrizione geometrica.",
    "POC": "acronimo di Proof of Concept.",
    "Pattern Publisher/Subscriber": "Design pattern utilizzato per la comunicazione asincrona fra diversi processi. In questo schema, mittenti e destinatari di messaggi dialogano attraverso un tramite, che può essere detto dispatcher o broker. Il mittente di un messaggio (detto publisher) non deve essere consapevole dell'identità dei destinatari (detti subscriber); esso si limita a pubblicare il proprio messaggio al dispatcher. I destinatari si rivolgono a loro volta al dispatcher abbonandosi alla ricezione di messaggi. Il dispatcher quindi inoltra ogni messaggio inviato da un publisher a tutti i subscriber interessati a quel messaggio.",
    "Periodi": null,
    "Periodo": "Spazio di tempo caratterizzato da particolari condizioni o avvenimenti.",
    "Piano di progetto": null,
    "Piano di qualifica": null,
    "PlantUML": "strumento open source che consente agli utenti di creare diagrammi UML da un linguaggio di testo semplice.",
    "Postcondizione": "condizione che deve essere sempre vera immediatamente dopo l'uscita dallo scenario di un caso d'uso specifico.",
    "Postcondizioni": null,
    "Precondizione": "condizione che deve essere sempre vera prima di accedere allo scenario di un caso d'uso specifico.",
    "Precondizioni": null,
    "Prodotto": "entità software progettata per essere rilasciata all'utente.",
    "Product Baseline": "baseline del progetto in cui il prodotto è stato realizzato e funziona, ma non è ancora pronto per il rilascio.",
    "Progetto": "insieme di processi, attività e compiti progettato e svolto dal fornitore, per raggiungere gli obiettivi prestabiliti dai requisiti obbligatori, in un arco temporale fissato nel contratto stipulato con il proponente e con risorse limitate che si esauriscono con l'avanzare del tempo.",
    "Proof of Concept": "realizzazione incompleta di un determinato progetto, allo scopo di provare il funzionamento base dell'applicativo software e il conseguimento di alcuni requisiti.",
    "Proof of concept": null,
    "Proponente": "azienda che presenta una proposta di contratto.",
    "Prototipi": null,
    "Prototipo": "idea del prodotto che viene implementata in fase di sviluppo del software che soddisfa parte delle esigenze degli stakeholder.",
    "Publisher/Subscriber": null,
    "Pull Request": "funzionalità di GitHub che consente di comunicare a tutti i membri del progetto le modifiche che sono state inviate da un membro specifico ad un repository GitHub. Una volta inviata una pull request, le parti interessate possono rivedere l'insieme di modifiche, discutere potenziali modifiche, richiedere modifiche oppure confermare il lavoro eseguito.",
    "Pull request": null,
    "Python": "linguaggio di programmazione dinamico orientato agli oggetti utilizzabile per molti tipi di sviluppo software. Offre un forte supporto all'integrazione con altri linguaggi e programmi.",
    "periodi": null,
    "piano di qualifica": null,
    "postcondizioni": null,
    "precondizioni": null,
    "prodotto": null,
    "progetto": null,
    "proof of concept": null,
    "proponente": null,
    "prototipi": null
  },
  "Q": {
    "Qualità": "insieme di caratteristiche di un'entità che ne determinano la capacità di soddisfare esigenze sia esplicite che implicite.",
    "Query": "interrogazione da parte di un utente di un database, per estrarre o aggiornare i dati che soddisfano un certo criterio di ricerca.",
    "qualità": null,
    "query": null
  },
  "R": {
    "RESTful": "tecnica di rappresentazione del trasferimento di stato di un determinato dato, utilizzata per la creazione di API che permettono alle proprie applicazioni di comunicare tra loro.",
    "Rancher": "PAAS che consente di fornire Kubernetes-as-a-Service.",
    "Report": "insieme di dati opportunamente estrapolati e/o elaborati, organizzati sotto forma tabellare.",
    "Repository": "ambiente di un sistema informativo, in cui vengono gestiti i metadati, attraverso tabelle relazionali. Per esempio, GitHub contiene repository di domio privato oppure pubblico per la condivisione di codice sorgente.",
    "Requisiti": "necessità del committente, legate al prodotto software da realizzare, che devono essere obbligatoriamente soddisfatte dal fornitore.",
    "Responsabile": "responsabile ultimo del gruppo dei risultati del progetto, elabora ed emana piani e scadenze, approva l'emissione di documenti e redige l'organigramma e il Piano di Progetto.",
    "report": null,
    "requisiti": null,
    "responsabile": null
  },
  "S": {
    "SLA": "acronimo di Service Level Agreement, è un strumento contrattuale attraverso il quale si definiscono le metriche che devono essere rispettate da un fornitore nei confronti dei propri stakeholders, che diventano obblighi contrattuali una volta che viene stipulato il contratto.",
    "Scalabilità": "parametro di qualità, che indica la capacità di un sistema di aumentare o diminuire in modo dinamico le risorse a sua disposizione in funzione delle necessità e disponibilità. Ai fini di questo progetto si parla di scalabilità di carico, ovvero la capacità di un sistema di incrementare le proprie prestazioni, e può essere di due tipi: verticale, che consiste in una scalabilità hardware in cui si aumentano le risorse fisiche a disposizione, e orizzontale, che consiste nell'aggiunta di più istanze dell'applicazione.",
    "Server": "componente o sistema informatico di elaborazione e gestione del traffico di informazioni che fornisce servizi ad altre componenti dette client.",
    "Server LDAP": "server che utilizza il protocollo standard LDAP per l'autenticazione degli utenti ad un'organizzazione, se questa la prevede.",
    "Sistema distribuito": "sistema informatico costituito da un insieme di processi interconnessi tra loro, in cui le comunicazioni avvengono solo esclusivamente tramite lo scambio di opportuni messaggi.",
    "Smartphone": "apparecchio elettronico che combina le funzioni di un telefono cellulare e di un computer palmare.",
    "Snippet": "frammento oppure un esempio di codice sorgente.",
    "Software": "insieme delle procedure e delle istruzioni in un sistema di elaborazione dati.",
    "Spring Boot": "strumento per la programmazione e il testing di applicazioni su piattaforma Spring, che produce applicazioni standalone eseguibili in Java o Kotlin.",
    "Stakeholder": "letteralmente portatori di interesse, sono l'insieme di persone che, a vario titolo, hanno influenza sul prodotto, sul progetto e sui processi.",
    "Stalker": "nome del progetto proposto dall'azienda Imola Informatica.",
    "Statement": "blocco di istruzioni che può consistere di una o più righe di codice.",
    "Stima": "previsione e valutazione del valore economico e del tempo da impiegare nell'ambito di un progetto.",
    "Subfiles": "pacchetto di LaTeX che fornisce un modo per compilare le sezioni di un documento usando lo stesso preambolo del documento principale.",
    "Swagger": "framework software open source supportato da un vasto ecosistema di strumenti che aiuta gli sviluppatori a progettare, costruire, documentare e utilizzare servizi Web RESTful.",
    "scalabilità": null,
    "server": null,
    "server LDAP": null,
    "sistema distribuito": null,
    "smartphone": null,
    "snippet": null,
    "software": null,
    "stakeholder": null,
    "statement": null,
    "stima": null,
    "subfiles": null
  },
  "T": {
    "Tag": "aspetto di Git che permette di identificare una versione di una release specifica del codice prodotto.",
    "Technology Baseline": "definisce le tecnologie, i framework e le librerie selezionate per lo sviluppo del prodotto.",
    "Telegram": "servizio di messaggistica istantanea e broadcasting basato sul cloud.",
    "Test end-to-end": "metodologia utilizzata per verificare se il flusso di un'applicazione sta funzionando come progettato dall'inizio alla fine.",
    "Ticket": "termine tecnico utilizzato per riferirsi all'assegnazione della responsabilità di una determinata issue su GitHub ad un membro del team di progetto.",
    "Tracciatura": "rilevamento della presenza di un'utente autenticato all'interno di un luogo. Può essere anonima quando l'utente non è autenticato nell'organizzazione di riferimento, oppure autenticata quando l'utente è autenticato nell'organizzazione di riferimento.",
    "Trunk": "modello di sviluppo nella quale tutti gli sviluppatori lavorano su un singolo ramo, chiamato master, con accesso aperto ad esso.",
    "tag": null,
    "test end-to-end": null,
    "ticket": null,
    "tracciatura": null
  },
  "U": {
    "UML": "acronimo di Unified Modeling Language, rappresenta un linguaggio visuale che si basa su un insieme di regole, vincoli e teorie utilizzate per la modellazione di una classe di problemi. Serve a supportare la descrizione dei sistemi software. La versione corrente di UML è la 2.0.",
    "UML 2.0": null,
    "Utente": "soggetto che ha interesse ad utilizzare il software prodotto da GruppOne.",
    "Utente autenticato": "utente non autenticato che ha effettuato l'autenticazione alla piattaforma dall'applicazione mobile oppure alla web application.",
    "Utente collegato": "utente autenticato che è collegato ad almeno un'organizzazione;",
    "Utente collegato incognito": "utente collegato ad un'organizzazione in modalità incognito, in quanto la sua identità non è conosciuta.",
    "Utente collegato noto": "utente collegato ad un'organizzazione in modalità noto, in quanto la sua identità è conosciuta.",
    "Utente non autenticato": "utente che non ha ancora effettuato l'autenticazione all'applicazione mobile oppure alla web application.",
    "Utente non collegato": "utente autenticato che non ha effettuato alcun collegamento ad un'organizzazione.",
    "Utenti anonimi": "\\placeholder{scrivere o ignorare questa definizione}",
    "Utenti autenticati": "\\placeholder{scrivere o ignorare questa definizione}",
    "utente": null,
    "utente autenticato": null,
    "utente collegato": null,
    "utente generico": null,
    "utente non autenticato": null,
    "utenti anonimi": null,
    "utenti autenticati": null
  },
  "V": {
    "VCS": "acronimo di Version Control System, è uno strumento di tracciamento del software che aiuta un team a gestire le modifiche al codice sorgente nel tempo.",
    "Verificatore": "responsabile delle attività di verifica, redige la parte retrospettiva del Piano di Qualifica che illustra l'esito e la completezza delle verifiche e delle prove effettuate secondo il piano.",
    "Verificatori": null,
    "Visualizzatore": "utente appartenente ad un'organizzazione abilitato esclusivamente a visualizzare i luoghi dell'organizzazione. Un singolo utente può essere visualizzatore di più organizzazioni distinte.",
    "verificatori": null,
    "visualizzatore": null
  },
  "W": {
    "Way of working": "modo di lavorare del team caratterizzato dall'utilizzo di best practices. Esso viene raffinato nel tempo attraverso la manutenzione migliorativa.",
    "Web application": "applicazione distribuita accessibile in una rete Internet per mezzo di un'architettura client/server.",
    "way of working": null,
    "web application": null
  },
  "X": {},
  "Y": {
    "YAML": "standard di serializzazione dei dati a misura d'uomo per tutti i linguaggi di programmazione."
  },
  "Z": {}
}
